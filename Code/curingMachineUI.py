# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'curingMachineUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(474, 320)
        MainWindow.setStyleSheet("\n"
"background-color: rgb(40, 40, 40);")
        self.mainApplication = QtWidgets.QWidget(MainWindow)
        self.mainApplication.setObjectName("mainApplication")
        self.controlTabWidget = QtWidgets.QTabWidget(self.mainApplication)
        self.controlTabWidget.setGeometry(QtCore.QRect(0, 0, 492, 321))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(12)
        self.controlTabWidget.setFont(font)
        self.controlTabWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.controlTabWidget.setAutoFillBackground(False)
        self.controlTabWidget.setStyleSheet("QTabWidget::pane { /* The tab widget frame */\n"
"    position: absolute;\n"
"\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that\n"
"    it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"   border-right: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-top-color: #C2C7CB; /* same as the pane color */\n"
"    width:220px;\n"
"     height: 50px;\n"
"    padding-left: 25px;\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"/*    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"*/\n"
"background-color: rgb(40, 40, 40);\n"
"color:  rgb(255, 255, 255);\n"
"\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    border-color: #9B9B9B;\n"
"    border-bottom-color: #C2C7CB; /* same as pane color */\n"
"}\n"
"QTabBar::tab:first {\n"
"    margin-left: 0; /* the first selected tab has nothing to overlap with on the left */\n"
"/*border-bottom-left-radius: 15px;*/\n"
"}\n"
"QTabBar::tab:last {\n"
"    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */\n"
"}\n"
"QTabBar::tab:focus {\n"
"    outline: none;\n"
"}\n"
"QTabBar:focus {\n"
"    outline: none;\n"
"}")
        self.controlTabWidget.setTabPosition(QtWidgets.QTabWidget.South)
        self.controlTabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.controlTabWidget.setIconSize(QtCore.QSize(25, 45))
        self.controlTabWidget.setElideMode(QtCore.Qt.ElideRight)
        self.controlTabWidget.setUsesScrollButtons(False)
        self.controlTabWidget.setDocumentMode(False)
        self.controlTabWidget.setTabsClosable(False)
        self.controlTabWidget.setMovable(False)
        self.controlTabWidget.setObjectName("controlTabWidget")
        self.operateTab = QtWidgets.QWidget()
        self.operateTab.setObjectName("operateTab")
        self.playPauseButton = QtWidgets.QPushButton(self.operateTab)
        self.playPauseButton.setGeometry(QtCore.QRect(80, 160, 161, 91))
        self.playPauseButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.playPauseButton.setFont(font)
        self.playPauseButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.playPauseButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border-bottom-left-radius: 15px;\n"
"    border-top-left-radius: 15px;\n"
"    \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.playPauseButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("templates/img/play-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap("templates/img/pause-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.playPauseButton.setIcon(icon)
        self.playPauseButton.setIconSize(QtCore.QSize(30, 30))
        self.playPauseButton.setCheckable(True)
        self.playPauseButton.setChecked(False)
        self.playPauseButton.setAutoDefault(False)
        self.playPauseButton.setDefault(False)
        self.playPauseButton.setFlat(False)
        self.playPauseButton.setObjectName("playPauseButton")
        self.stopButton = QtWidgets.QPushButton(self.operateTab)
        self.stopButton.setGeometry(QtCore.QRect(240, 160, 161, 91))
        self.stopButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.stopButton.setFont(font)
        self.stopButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.stopButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"    border-bottom-right-radius: 15px;\n"
"    border-top-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.stopButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("templates/img/video-player-stop-button.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stopButton.setIcon(icon1)
        self.stopButton.setIconSize(QtCore.QSize(25, 25))
        self.stopButton.setObjectName("stopButton")
        self.progressBar = QtWidgets.QProgressBar(self.operateTab)
        self.progressBar.setGeometry(QtCore.QRect(0, 0, 481, 61))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.progressBar.setFont(font)
        self.progressBar.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.progressBar.setStyleSheet("QProgressBar::chunk {\n"
"\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:0.523, x2:0, y2:0.534, stop:0 rgba(130, 203, 117, 255), stop:1 rgba(66, 191, 85, 255));\n"
"border: 1px solid green;\n"
"}\n"
"\n"
"QProgressBar {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
" /*  border-bottom-left-radius: 10px;\n"
" border-bottom-right-radius: 10px;*/\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(150, 150, 150, 255), stop:1 rgba(180, 180, 180, 255));\n"
"}\n"
"")
        self.progressBar.setMaximum(100)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressBar.setTextVisible(True)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setObjectName("progressBar")
        self.FileNameLabel = QtWidgets.QLabel(self.operateTab)
        self.FileNameLabel.setGeometry(QtCore.QRect(60, 90, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.FileNameLabel.setFont(font)
        self.FileNameLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.FileNameLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.FileNameLabel.setObjectName("FileNameLabel")
        self.timeRemainingLabel = QtWidgets.QLabel(self.operateTab)
        self.timeRemainingLabel.setGeometry(QtCore.QRect(230, 90, 211, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        self.timeRemainingLabel.setFont(font)
        self.timeRemainingLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.timeRemainingLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.timeRemainingLabel.setScaledContents(True)
        self.timeRemainingLabel.setWordWrap(False)
        self.timeRemainingLabel.setObjectName("timeRemainingLabel")
        self.materialPreset = QtWidgets.QLabel(self.operateTab)
        self.materialPreset.setGeometry(QtCore.QRect(230, 120, 211, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham Medium")
        font.setPointSize(14)
        self.materialPreset.setFont(font)
        self.materialPreset.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.materialPreset.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.materialPreset.setScaledContents(True)
        self.materialPreset.setWordWrap(False)
        self.materialPreset.setObjectName("materialPreset")
        self.materialPresetLabel = QtWidgets.QLabel(self.operateTab)
        self.materialPresetLabel.setGeometry(QtCore.QRect(60, 120, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.materialPresetLabel.setFont(font)
        self.materialPresetLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.materialPresetLabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.materialPresetLabel.setObjectName("materialPresetLabel")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("templates/img/play-button-arrowhead.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap("templates/img/play-button-arrowhead_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.controlTabWidget.addTab(self.operateTab, icon2, "")
        self.settingsTab = QtWidgets.QWidget()
        self.settingsTab.setObjectName("settingsTab")
        self.uvStartStopButton = QtWidgets.QPushButton(self.settingsTab)
        self.uvStartStopButton.setGeometry(QtCore.QRect(270, 110, 191, 71))
        self.uvStartStopButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.uvStartStopButton.setFont(font)
        self.uvStartStopButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.uvStartStopButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"    \n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.uvStartStopButton.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("templates/img/ultraviolet_OFF.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap("templates/img/ultraviolet_ON.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.uvStartStopButton.setIcon(icon3)
        self.uvStartStopButton.setIconSize(QtCore.QSize(120, 120))
        self.uvStartStopButton.setCheckable(True)
        self.uvStartStopButton.setChecked(False)
        self.uvStartStopButton.setAutoDefault(False)
        self.uvStartStopButton.setDefault(False)
        self.uvStartStopButton.setFlat(False)
        self.uvStartStopButton.setObjectName("uvStartStopButton")
        self.timeSpinBox = QtWidgets.QSpinBox(self.settingsTab)
        self.timeSpinBox.setGeometry(QtCore.QRect(10, 120, 241, 131))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(40, 40, 40))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 120, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        self.timeSpinBox.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(20)
        self.timeSpinBox.setFont(font)
        self.timeSpinBox.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.timeSpinBox.setAutoFillBackground(False)
        self.timeSpinBox.setStyleSheet("QSpinBox {\n"
"    padding-right: 5px; /* make room for the arrows */\n"
"    color: rgb(255, 255, 255);\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"   \n"
"}\n"
"QSpinBox ::text:selected {\n"
"    background-color: rgb(255, 146, 57);\n"
"   \n"
"}\n"
"QSpinBox::up-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"\n"
"border-top-left-radius: 15px;\n"
"border-top-right-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 100px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::up-arrow { image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px; }\n"
"\n"
"\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"\n"
"QSpinBox::down-button {\n"
"     border: 1px solid rgb(87, 87, 87);\n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 100px;\n"
"     height: 61px;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QSpinBox::down-arrow {image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"     height: 40px;\n"
"padding: 5px;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"\n"
"}\n"
"\n"
"")
        self.timeSpinBox.setFrame(False)
        self.timeSpinBox.setReadOnly(False)
        self.timeSpinBox.setButtonSymbols(QtWidgets.QAbstractSpinBox.PlusMinus)
        self.timeSpinBox.setAccelerated(True)
        self.timeSpinBox.setMaximum(150)
        self.timeSpinBox.setSingleStep(1)
        self.timeSpinBox.setProperty("value", 0)
        self.timeSpinBox.setObjectName("timeSpinBox")
        self.timeLabel = QtWidgets.QLabel(self.settingsTab)
        self.timeLabel.setGeometry(QtCore.QRect(10, 120, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.timeLabel.setFont(font)
        self.timeLabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.timeLabel.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.timeLabel.setObjectName("timeLabel")
        self.tempStartStopButton = QtWidgets.QPushButton(self.settingsTab)
        self.tempStartStopButton.setGeometry(QtCore.QRect(270, 180, 191, 71))
        self.tempStartStopButton.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Roboto")
        self.tempStartStopButton.setFont(font)
        self.tempStartStopButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.tempStartStopButton.setStyleSheet("QPushButton {\n"
"    border: 1px solid rgb(87, 87, 87);\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    \n"
"border-bottom-left-radius: 15px;\n"
"border-bottom-right-radius: 15px;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                      stop: 0 #dadbde, stop: 1 #f6f7fa);\n"
"}\n"
"\n"
"QPushButton:flat {\n"
"    border: none; /* no border for a flat push button */\n"
"}\n"
"\n"
"QPushButton:default {\n"
"    border-color: navy; /* make the default button prominent */\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    outline: none;\n"
"}")
        self.tempStartStopButton.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("templates/img/heater_off.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap("templates/img/heater_on.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.tempStartStopButton.setIcon(icon4)
        self.tempStartStopButton.setIconSize(QtCore.QSize(120, 120))
        self.tempStartStopButton.setCheckable(True)
        self.tempStartStopButton.setChecked(False)
        self.tempStartStopButton.setAutoDefault(False)
        self.tempStartStopButton.setDefault(False)
        self.tempStartStopButton.setFlat(False)
        self.tempStartStopButton.setObjectName("tempStartStopButton")
        self.selectFilamentlabel = QtWidgets.QLabel(self.settingsTab)
        self.selectFilamentlabel.setGeometry(QtCore.QRect(0, 0, 381, 31))
        font = QtGui.QFont()
        font.setFamily("Gotham Light")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.selectFilamentlabel.setFont(font)
        self.selectFilamentlabel.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.selectFilamentlabel.setStyleSheet("color: rgb(255, 255, 255);")
        self.selectFilamentlabel.setObjectName("selectFilamentlabel")
        self.materialComboBox = QtWidgets.QComboBox(self.settingsTab)
        self.materialComboBox.setGeometry(QtCore.QRect(0, 40, 481, 51))
        font = QtGui.QFont()
        font.setFamily("Gotham")
        font.setPointSize(24)
        self.materialComboBox.setFont(font)
        self.materialComboBox.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.materialComboBox.setStyleSheet(" QScrollBar:vertical {\n"
"     border: 1px solid black;\n"
"border-radius: 5px;\n"
"    background-color: rgb(40,40,40);\n"
"     width: 80px;\n"
"     margin: 70px 0 70px 0;\n"
" }\n"
" QScrollBar::handle:vertical {\n"
"border-radius: 5px;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"min-height: 20px;\n"
" }\n"
" QScrollBar::add-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height:65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical {\n"
"     border: 1px solid black;\n"
"background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"     height: 65px;\n"
"border-radius: 5px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"QScrollBar::up-arrow:vertical {\n"
" image: url(./templates/img/arrows.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"QScrollBar::down-arrow:vertical {\n"
" image: url(./templates/img/arrows-5.png);\n"
"    width: 40px;\n"
"    height: 40px;\n"
" padding: 5px;\n"
" }\n"
"\n"
" QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
"     background: none;\n"
" }\n"
"\n"
"QComboBox {\n"
"border: 1px solid black;\n"
"    padding: 0px 18px 0px 3px;\n"
"    min-width: 6em;\n"
"\n"
"}\n"
"\n"
"QComboBox::item {\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QComboBox:editable {\n"
"    background: white;\n"
"}\n"
"\n"
"QComboBox:!editable, QComboBox::drop-down:editable {\n"
"background: white;\n"
"}\n"
"\n"
"/* QComboBox gets the \"on\" state when the popup is open */\n"
"QComboBox:!editable:on, QComboBox::drop-down:editable:on {\n"
"background: white;\n"
"}\n"
"\n"
"\n"
"QComboBox::drop-down {\n"
"border-left: 1px solid black;\n"
"border-right: 1px solid black;\n"
"    background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    width: 60px;\n"
"     height: 50px;\n"
"\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"\n"
"image: url(./templates/img/arrows-5.png);\n"
"width: 30px;\n"
"height: 30px;\n"
"\n"
"}\n"
"")
        self.materialComboBox.setEditable(False)
        self.materialComboBox.setCurrentText("")
        self.materialComboBox.setMaxVisibleItems(8)
        self.materialComboBox.setMinimumContentsLength(0)
        self.materialComboBox.setIconSize(QtCore.QSize(30, 30))
        self.materialComboBox.setObjectName("materialComboBox")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("templates/img/settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon5.addPixmap(QtGui.QPixmap("templates/img/settings_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.controlTabWidget.addTab(self.settingsTab, icon5, "")
        MainWindow.setCentralWidget(self.mainApplication)

        self.retranslateUi(MainWindow)
        self.controlTabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.progressBar.setFormat(_translate("MainWindow", "%p%"))
        self.FileNameLabel.setText(_translate("MainWindow", "Time Remaining:"))
        self.timeRemainingLabel.setText(_translate("MainWindow", "00H 00M"))
        self.materialPreset.setText(_translate("MainWindow", "None"))
        self.materialPresetLabel.setText(_translate("MainWindow", "Material Preset:"))
        self.controlTabWidget.setTabText(self.controlTabWidget.indexOf(self.operateTab), _translate("MainWindow", "Operate"))
        self.timeSpinBox.setSuffix(_translate("MainWindow", " min"))
        self.timeLabel.setText(_translate("MainWindow", "Time :"))
        self.selectFilamentlabel.setText(_translate("MainWindow", "Material Preset"))
        self.controlTabWidget.setTabText(self.controlTabWidget.indexOf(self.settingsTab), _translate("MainWindow", "Settings"))
