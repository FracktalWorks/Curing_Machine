<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>481</width>
    <height>321</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">
background-color: rgb(40, 40, 40);</string>
  </property>
  <widget class="QWidget" name="mainApplication">
   <widget class="QStackedWidget" name="stackedWidget">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>481</width>
      <height>321</height>
     </rect>
    </property>
    <property name="currentIndex">
     <number>0</number>
    </property>
    <widget class="QWidget" name="mainPage">
     <widget class="QTabWidget" name="controlTabWidget">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>0</y>
        <width>492</width>
        <height>321</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham</family>
        <pointsize>12</pointsize>
       </font>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="autoFillBackground">
       <bool>false</bool>
      </property>
      <property name="styleSheet">
       <string notr="true">QTabWidget::pane { /* The tab widget frame */
    position: absolute;

}

QTabWidget::tab-bar {

}

/* Style the tab using the tab sub-control. Note that
    it reads QTabBar _not_ QTabWidget */
QTabBar::tab {
   border-right: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
    border-top-color: #C2C7CB; /* same as the pane color */
    width:220px;
     height: 50px;
	padding-left: 25px;

}

QTabBar::tab:selected {
/*    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
*/
background-color: rgb(40, 40, 40);
color:  rgb(255, 255, 255);

}

QTabBar::tab:selected {
    border-color: #9B9B9B;
    border-bottom-color: #C2C7CB; /* same as pane color */
}
QTabBar::tab:first {
    margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
/*border-bottom-left-radius: 15px;*/
}
QTabBar::tab:last {
    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
}
QTabBar::tab:focus {
	outline: none;
}
QTabBar:focus {
	outline: none;
}</string>
      </property>
      <property name="tabPosition">
       <enum>QTabWidget::South</enum>
      </property>
      <property name="tabShape">
       <enum>QTabWidget::Rounded</enum>
      </property>
      <property name="currentIndex">
       <number>0</number>
      </property>
      <property name="iconSize">
       <size>
        <width>25</width>
        <height>45</height>
       </size>
      </property>
      <property name="elideMode">
       <enum>Qt::ElideRight</enum>
      </property>
      <property name="usesScrollButtons">
       <bool>false</bool>
      </property>
      <property name="documentMode">
       <bool>false</bool>
      </property>
      <property name="tabsClosable">
       <bool>false</bool>
      </property>
      <property name="movable">
       <bool>false</bool>
      </property>
      <widget class="QWidget" name="operateTab">
       <attribute name="icon">
        <iconset>
         <normaloff>templates/img/play-button-arrowhead.png</normaloff>
         <normalon>templates/img/play-button-arrowhead_white.png</normalon>templates/img/play-button-arrowhead.png</iconset>
       </attribute>
       <attribute name="title">
        <string>Operate</string>
       </attribute>
       <widget class="QPushButton" name="playPauseButton">
        <property name="geometry">
         <rect>
          <x>80</x>
          <y>138</y>
          <width>161</width>
          <height>91</height>
         </rect>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>0</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Roboto</family>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    border: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
	border-bottom-left-radius: 15px;
	border-top-left-radius: 15px;
    
}

QPushButton:pressed {

    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="icon">
         <iconset>
          <normaloff>templates/img/play-button.png</normaloff>
          <normalon>templates/img/pause-button.png</normalon>templates/img/play-button.png</iconset>
        </property>
        <property name="iconSize">
         <size>
          <width>30</width>
          <height>30</height>
         </size>
        </property>
        <property name="checkable">
         <bool>true</bool>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="autoDefault">
         <bool>false</bool>
        </property>
        <property name="default">
         <bool>false</bool>
        </property>
        <property name="flat">
         <bool>false</bool>
        </property>
       </widget>
       <widget class="QPushButton" name="stopButton">
        <property name="geometry">
         <rect>
          <x>240</x>
          <y>138</y>
          <width>161</width>
          <height>91</height>
         </rect>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>0</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Roboto</family>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    border: 1px solid rgb(87, 87, 87);

	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));

	border-bottom-right-radius: 15px;
	border-top-right-radius: 15px;
}

QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="icon">
         <iconset>
          <normaloff>templates/img/video-player-stop-button.png</normaloff>templates/img/video-player-stop-button.png</iconset>
        </property>
        <property name="iconSize">
         <size>
          <width>25</width>
          <height>25</height>
         </size>
        </property>
       </widget>
       <widget class="QProgressBar" name="progressBar">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>481</width>
          <height>61</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham</family>
          <pointsize>20</pointsize>
          <weight>50</weight>
          <italic>false</italic>
          <bold>false</bold>
          <stylestrategy>PreferAntialias</stylestrategy>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QProgressBar::chunk {

	background-color: qlineargradient(spread:pad, x1:0, y1:0.523, x2:0, y2:0.534, stop:0 rgba(130, 203, 117, 255), stop:1 rgba(66, 191, 85, 255));
border: 1px solid green;
}

QProgressBar {
    border: 1px solid rgb(87, 87, 87);
 /*  border-bottom-left-radius: 10px;
 border-bottom-right-radius: 10px;*/
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 rgba(150, 150, 150, 255), stop:1 rgba(180, 180, 180, 255));
}
</string>
        </property>
        <property name="maximum">
         <number>100</number>
        </property>
        <property name="value">
         <number>0</number>
        </property>
        <property name="alignment">
         <set>Qt::AlignCenter</set>
        </property>
        <property name="textVisible">
         <bool>true</bool>
        </property>
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="format">
         <string>%p%</string>
        </property>
       </widget>
       <widget class="QLabel" name="FileNameLabel">
        <property name="geometry">
         <rect>
          <x>60</x>
          <y>68</y>
          <width>161</width>
          <height>21</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham Light</family>
          <pointsize>14</pointsize>
          <weight>50</weight>
          <bold>false</bold>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);</string>
        </property>
        <property name="text">
         <string>Time Remaining:</string>
        </property>
       </widget>
       <widget class="QLabel" name="timeRemainingLabel">
        <property name="geometry">
         <rect>
          <x>230</x>
          <y>68</y>
          <width>211</width>
          <height>21</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham Medium</family>
          <pointsize>14</pointsize>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);
background-color: rgba(255, 255, 255, 0);</string>
        </property>
        <property name="text">
         <string>0 Seconds</string>
        </property>
        <property name="scaledContents">
         <bool>true</bool>
        </property>
        <property name="wordWrap">
         <bool>false</bool>
        </property>
       </widget>
       <widget class="QLabel" name="materialPreset">
        <property name="geometry">
         <rect>
          <x>230</x>
          <y>98</y>
          <width>211</width>
          <height>21</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham Medium</family>
          <pointsize>14</pointsize>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);
background-color: rgba(255, 255, 255, 0);</string>
        </property>
        <property name="text">
         <string>None</string>
        </property>
        <property name="scaledContents">
         <bool>true</bool>
        </property>
        <property name="wordWrap">
         <bool>false</bool>
        </property>
       </widget>
       <widget class="QLabel" name="materialPresetLabel">
        <property name="geometry">
         <rect>
          <x>60</x>
          <y>98</y>
          <width>161</width>
          <height>21</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham Light</family>
          <pointsize>14</pointsize>
          <weight>50</weight>
          <bold>false</bold>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);</string>
        </property>
        <property name="text">
         <string>Material Preset:</string>
        </property>
       </widget>
       <widget class="QLabel" name="ipStatus">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>240</y>
          <width>161</width>
          <height>31</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>MS Shell Dlg 2</family>
          <pointsize>8</pointsize>
          <weight>50</weight>
          <bold>false</bold>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);</string>
        </property>
        <property name="text">
         <string>Wi-Fi Not Connected</string>
        </property>
       </widget>
      </widget>
      <widget class="QWidget" name="settingsTab">
       <attribute name="icon">
        <iconset>
         <normaloff>templates/img/settings.png</normaloff>
         <normalon>templates/img/settings_white.png</normalon>templates/img/settings.png</iconset>
       </attribute>
       <attribute name="title">
        <string>Settings</string>
       </attribute>
       <widget class="QPushButton" name="uvStartStopButton">
        <property name="geometry">
         <rect>
          <x>270</x>
          <y>90</y>
          <width>191</width>
          <height>71</height>
         </rect>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>0</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Roboto</family>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    border: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));

border-top-left-radius: 15px;
border-top-right-radius: 15px;
    
}

QPushButton:pressed {

    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="icon">
         <iconset>
          <normaloff>templates/img/ultraviolet_OFF.png</normaloff>
          <normalon>templates/img/ultraviolet_ON.png</normalon>templates/img/ultraviolet_OFF.png</iconset>
        </property>
        <property name="iconSize">
         <size>
          <width>120</width>
          <height>120</height>
         </size>
        </property>
        <property name="checkable">
         <bool>true</bool>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="autoDefault">
         <bool>false</bool>
        </property>
        <property name="default">
         <bool>false</bool>
        </property>
        <property name="flat">
         <bool>false</bool>
        </property>
       </widget>
       <widget class="QSpinBox" name="timeSpinBox">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>100</y>
          <width>241</width>
          <height>131</height>
         </rect>
        </property>
        <property name="palette">
         <palette>
          <active>
           <colorrole role="WindowText">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Button">
            <brush brushstyle="SolidPattern">
             <color alpha="0">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Text">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="ButtonText">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Base">
            <brush brushstyle="NoBrush">
             <color alpha="255">
              <red>0</red>
              <green>0</green>
              <blue>0</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Window">
            <brush brushstyle="SolidPattern">
             <color alpha="0">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Highlight">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>40</red>
              <green>40</green>
              <blue>40</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="PlaceholderText">
            <brush brushstyle="NoBrush">
             <color alpha="128">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
          </active>
          <inactive>
           <colorrole role="WindowText">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Button">
            <brush brushstyle="SolidPattern">
             <color alpha="0">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Text">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="ButtonText">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Base">
            <brush brushstyle="NoBrush">
             <color alpha="255">
              <red>0</red>
              <green>0</green>
              <blue>0</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Window">
            <brush brushstyle="SolidPattern">
             <color alpha="0">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Highlight">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>40</red>
              <green>40</green>
              <blue>40</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="PlaceholderText">
            <brush brushstyle="NoBrush">
             <color alpha="128">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
          </inactive>
          <disabled>
           <colorrole role="WindowText">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Button">
            <brush brushstyle="SolidPattern">
             <color alpha="0">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Text">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="ButtonText">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Base">
            <brush brushstyle="NoBrush">
             <color alpha="255">
              <red>0</red>
              <green>0</green>
              <blue>0</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Window">
            <brush brushstyle="SolidPattern">
             <color alpha="0">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="Highlight">
            <brush brushstyle="SolidPattern">
             <color alpha="255">
              <red>0</red>
              <green>120</green>
              <blue>215</blue>
             </color>
            </brush>
           </colorrole>
           <colorrole role="PlaceholderText">
            <brush brushstyle="NoBrush">
             <color alpha="128">
              <red>255</red>
              <green>255</green>
              <blue>255</blue>
             </color>
            </brush>
           </colorrole>
          </disabled>
         </palette>
        </property>
        <property name="font">
         <font>
          <family>Gotham</family>
          <pointsize>20</pointsize>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="autoFillBackground">
         <bool>false</bool>
        </property>
        <property name="styleSheet">
         <string notr="true">QSpinBox {
    padding-right: 5px; /* make room for the arrows */
	color: rgb(255, 255, 255);
	background-color: rgba(255, 255, 255, 0);
   
}
QSpinBox ::text:selected {
	background-color: rgb(255, 146, 57);
   
}
QSpinBox::up-button {
     border: 1px solid rgb(87, 87, 87);

border-top-left-radius: 15px;
border-top-right-radius: 15px;
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
    width: 100px;
     height: 61px;
    padding: 2px;
}

QSpinBox::up-arrow { image: url(./templates/img/arrows.png);
    width: 40px;
     height: 40px;
padding: 5px; }



QSpinBox::up-button:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}


QSpinBox::down-button {
     border: 1px solid rgb(87, 87, 87);
border-bottom-left-radius: 15px;
border-bottom-right-radius: 15px;
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
    width: 100px;
     height: 61px;
    padding: 2px;
}

QSpinBox::down-arrow {image: url(./templates/img/arrows-5.png);
    width: 40px;
     height: 40px;
padding: 5px;
}

QSpinBox::down-button:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);

}

</string>
        </property>
        <property name="frame">
         <bool>false</bool>
        </property>
        <property name="readOnly">
         <bool>false</bool>
        </property>
        <property name="buttonSymbols">
         <enum>QAbstractSpinBox::PlusMinus</enum>
        </property>
        <property name="accelerated">
         <bool>true</bool>
        </property>
        <property name="suffix">
         <string> min</string>
        </property>
        <property name="maximum">
         <number>500</number>
        </property>
        <property name="singleStep">
         <number>1</number>
        </property>
        <property name="value">
         <number>0</number>
        </property>
       </widget>
       <widget class="QLabel" name="timeLabel">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>100</y>
          <width>181</width>
          <height>31</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham Light</family>
          <pointsize>15</pointsize>
          <weight>50</weight>
          <bold>false</bold>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);
background-color: rgba(255, 255, 255, 0);</string>
        </property>
        <property name="text">
         <string>Time :</string>
        </property>
       </widget>
       <widget class="QPushButton" name="tempStartStopButton">
        <property name="geometry">
         <rect>
          <x>270</x>
          <y>160</y>
          <width>191</width>
          <height>71</height>
         </rect>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>0</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Roboto</family>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    border: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
    
border-bottom-left-radius: 15px;
border-bottom-right-radius: 15px;
}

QPushButton:pressed {

    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="icon">
         <iconset>
          <normaloff>templates/img/heater_off.png</normaloff>
          <normalon>templates/img/heater_on.png</normalon>templates/img/heater_off.png</iconset>
        </property>
        <property name="iconSize">
         <size>
          <width>120</width>
          <height>120</height>
         </size>
        </property>
        <property name="checkable">
         <bool>true</bool>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="autoDefault">
         <bool>false</bool>
        </property>
        <property name="default">
         <bool>false</bool>
        </property>
        <property name="flat">
         <bool>false</bool>
        </property>
       </widget>
       <widget class="QLabel" name="selectFilamentlabel">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>50</y>
          <width>381</width>
          <height>31</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham Light</family>
          <pointsize>14</pointsize>
          <weight>50</weight>
          <bold>false</bold>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);</string>
        </property>
        <property name="text">
         <string>Material Preset</string>
        </property>
       </widget>
       <widget class="QComboBox" name="materialComboBox">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>481</width>
          <height>51</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>Gotham</family>
          <pointsize>24</pointsize>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true"> QScrollBar:vertical {
     border: 1px solid black;
border-radius: 5px;
	background-color: rgb(40,40,40);
     width: 80px;
     margin: 70px 0 70px 0;
 }
 QScrollBar::handle:vertical {
border-radius: 5px;
background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
min-height: 20px;
 }
 QScrollBar::add-line:vertical {
     border: 1px solid black;
background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
     height:65px;
border-radius: 5px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 1px solid black;
background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
     height: 65px;
border-radius: 5px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

QScrollBar::up-arrow:vertical {
 image: url(./templates/img/arrows.png);
    width: 40px;
    height: 40px;
 padding: 5px;
 }
QScrollBar::down-arrow:vertical {
 image: url(./templates/img/arrows-5.png);
    width: 40px;
    height: 40px;
 padding: 5px;
 }

 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
     background: none;
 }

QComboBox {
border: 1px solid black;
    padding: 0px 18px 0px 3px;
    min-width: 6em;

}

QComboBox::item {
	color: rgb(0, 0, 0);
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
background: white;
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
background: white;
}


QComboBox::drop-down {
border-left: 1px solid black;
border-right: 1px solid black;
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
    width: 60px;
     height: 50px;

}

QComboBox::down-arrow {

image: url(./templates/img/arrows-5.png);
width: 30px;
height: 30px;

}
</string>
        </property>
        <property name="editable">
         <bool>false</bool>
        </property>
        <property name="currentText">
         <string/>
        </property>
        <property name="maxVisibleItems">
         <number>8</number>
        </property>
        <property name="minimumContentsLength">
         <number>0</number>
        </property>
        <property name="iconSize">
         <size>
          <width>30</width>
          <height>30</height>
         </size>
        </property>
       </widget>
       <widget class="QLabel" name="selectFilamentlabel_2">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>244</y>
          <width>291</width>
          <height>31</height>
         </rect>
        </property>
        <property name="font">
         <font>
          <family>MS Shell Dlg 2</family>
          <pointsize>8</pointsize>
          <weight>50</weight>
          <bold>false</bold>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">color: rgb(255, 255, 255);</string>
        </property>
        <property name="text">
         <string>Fracktal Works Curing Machine V1.0  www.fracktal.in</string>
        </property>
       </widget>
       <widget class="QPushButton" name="wifiSettingsButton">
        <property name="geometry">
         <rect>
          <x>400</x>
          <y>240</y>
          <width>61</width>
          <height>31</height>
         </rect>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>0</height>
         </size>
        </property>
        <property name="font">
         <font>
          <family>Roboto</family>
         </font>
        </property>
        <property name="contextMenuPolicy">
         <enum>Qt::NoContextMenu</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
    border: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));

border-top-left-radius: 15px;
border-top-right-radius: 15px;
border-bottom-left-radius: 15px;
border-bottom-right-radius: 15px;
    
}

QPushButton:pressed {

    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="icon">
         <iconset>
          <normaloff>templates/img/wifi.png</normaloff>templates/img/wifi.png</iconset>
        </property>
        <property name="iconSize">
         <size>
          <width>30</width>
          <height>30</height>
         </size>
        </property>
        <property name="checkable">
         <bool>true</bool>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="autoRepeatDelay">
         <number>296</number>
        </property>
        <property name="autoDefault">
         <bool>false</bool>
        </property>
        <property name="default">
         <bool>false</bool>
        </property>
        <property name="flat">
         <bool>false</bool>
        </property>
       </widget>
       <zorder>selectFilamentlabel_2</zorder>
       <zorder>uvStartStopButton</zorder>
       <zorder>timeSpinBox</zorder>
       <zorder>timeLabel</zorder>
       <zorder>tempStartStopButton</zorder>
       <zorder>selectFilamentlabel</zorder>
       <zorder>materialComboBox</zorder>
       <zorder>wifiSettingsButton</zorder>
      </widget>
     </widget>
    </widget>
    <widget class="QWidget" name="wifiSettingsPage">
     <widget class="QLabel" name="passwordlabel">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>130</y>
        <width>461</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham Light</family>
        <pointsize>14</pointsize>
        <weight>50</weight>
        <bold>false</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(255, 255, 255);</string>
      </property>
      <property name="text">
       <string>Enter Password:</string>
      </property>
     </widget>
     <widget class="QPushButton" name="wifiSettingsDoneButton">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>230</y>
        <width>251</width>
        <height>91</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham</family>
        <pointsize>13</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
     border: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));


}

QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
      </property>
      <property name="text">
       <string>Done</string>
      </property>
      <property name="iconSize">
       <size>
        <width>40</width>
        <height>40</height>
       </size>
      </property>
     </widget>
     <widget class="QComboBox" name="wifiSettingsComboBox">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>40</y>
        <width>421</width>
        <height>51</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham</family>
        <pointsize>20</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true"> QScrollBar:vertical {
     border: 1px solid black;
border-radius: 5px;
    background-color: rgb(40,40,40);
     width: 60px;
     margin: 67px 0 67px 0;
 }

/* Sets up the color and height of handle */
QScrollBar::handle:vertical {
border-radius: 5px;
background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
min-height: 7px;
}


QScrollBar::add-line:vertical {
     border: 1px solid black;
background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
     height:65px;
border-radius: 5px;
     subcontrol-position: bottom;
     subcontrol-origin: margin;
 }

 QScrollBar::sub-line:vertical {
     border: 1px solid black;
background: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
     height: 65px;
border-radius: 5px;
     subcontrol-position: top;
     subcontrol-origin: margin;
 }

QScrollBar::up-arrow:vertical {
 image: url(./templates/img/arrows.png);
    width: 40px;
    height: 40px;
 padding: 5px;
 }
QScrollBar::down-arrow:vertical {
 image: url(./templates/img/arrows-5.png);
    width: 40px;
    height: 40px;
 padding: 5px;
 }

/* need this to get rid of crosshatching on scrollbar background */
QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
background: none;
}

QComboBox {
border: 1px solid black;
    padding: 0px 18px 0px 3px;
    min-width: 6em;

}

QComboBox::item {
	color: rgb(0, 0, 0);
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
background: white;
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
background: white;
}


QComboBox::drop-down {
border-left: 1px solid black;
border-right: 1px solid black;
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));
    width: 60px;
     height: 50px;

}

QComboBox::down-arrow {

image: url(./templates/img/arrows-5.png);
width: 30px;
height: 30px;

}


QComboBox QAbstractItemView {
    selection-background-color: rgb(40, 40, 40);
    background: white;
}</string>
      </property>
      <property name="editable">
       <bool>false</bool>
      </property>
      <property name="maxVisibleItems">
       <number>8</number>
      </property>
      <property name="iconSize">
       <size>
        <width>30</width>
        <height>30</height>
       </size>
      </property>
     </widget>
     <widget class="QLabel" name="ssidlabel">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>0</y>
        <width>461</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham Light</family>
        <pointsize>14</pointsize>
        <weight>50</weight>
        <bold>false</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">color: rgb(255, 255, 255);</string>
      </property>
      <property name="text">
       <string>Enter SSID:</string>
      </property>
     </widget>
     <widget class="QPushButton" name="wifiSettingsCancelButton">
      <property name="geometry">
       <rect>
        <x>250</x>
        <y>230</y>
        <width>231</width>
        <height>91</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham</family>
        <pointsize>13</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
     border: 1px solid rgb(87, 87, 87);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));


}

QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
      </property>
      <property name="text">
       <string>Cancel</string>
      </property>
      <property name="iconSize">
       <size>
        <width>40</width>
        <height>40</height>
       </size>
      </property>
     </widget>
     <widget class="QPushButton" name="wifiSettingsSSIDKeyboardButton">
      <property name="geometry">
       <rect>
        <x>421</x>
        <y>40</y>
        <width>61</width>
        <height>51</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Gotham</family>
        <pointsize>19</pointsize>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
     border: 1px solid rgb(0, 0, 0);
	background-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0.188, stop:0 rgba(180, 180, 180, 255), stop:1 rgba(255, 255, 255, 255));


}

QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #dadbde, stop: 1 #f6f7fa);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}

QPushButton:focus {
	outline: none;
}</string>
      </property>
      <property name="text">
       <string>...</string>
      </property>
      <property name="iconSize">
       <size>
        <width>40</width>
        <height>40</height>
       </size>
      </property>
     </widget>
    </widget>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
